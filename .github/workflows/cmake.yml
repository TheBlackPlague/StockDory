name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        version: [ 1.0-ALPHA06142023 ]
        simd: [ sse, sse2, sse3, sse4.1, avx, avx2, avx512bw ]
        os: [ ubuntu-22.04 , windows-latest ]
        include:
          - os: windows-latest
            extension: .exe


    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - if: matrix.os == 'ubuntu-22.04'
      name: Install Linux Dependencies
      run: |
        sudo apt install libncurses5 ninja-build
    - if: matrix.os == 'windows-latest'
      name: Install Windows Dependencies
      run: |
        choco install ninja
    - if: matrix.os == 'macos-latest'
      name: Install MacOS Dependencies
      run: |
        brew install ninja

    - if: matrix.os == 'ubuntu-22.04'
      name: Install Clang 16 (Ubuntu)
      uses: KyleMayes/install-llvm-action@v1.8.0
      with:
        ubuntu-version: "22.04"
        version: "16.0.3"
        force-version: true
        env: true
    - if: matrix.os == 'windows-latest'
      name: Install Clang 16 (Windows)
      run: |
        choco install llvm --version 16.0.3 -y
    - if: matrix.os == 'macos-latest'
      name: Install Clang 16 (MacOS)
      run: |
        brew install llvm@16

    - if: matrix.os == 'windows-latest'
      name: Set CC and CXX for Windows
      shell: powershell
      run: |
        echo "CC=clang" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CXX=clang++" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - if: matrix.os == 'macos-latest'
      name: Set CC and CXX for MacOS
      run: |
        echo "CC=/usr/local/opt/llvm@16/bin/clang" >> $GITHUB_ENV
        echo "CXX=/usr/local/opt/llvm@16/bin/clang++" >> $GITHUB_ENV
        echo "PATH=/usr/local/opt/llvm@16/bin:$PATH" >> $GITHUB_ENV

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_CXX_FLAGS="-m${{ matrix.simd }}" -G Ninja

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

    - name: Rename Binary
      run: |
        mv ${{ github.workspace }}/build/StockDory${{ matrix.extension }} ${{ github.workspace }}/StockDory-${{ matrix.version }}-${{ matrix.os }}-${{ matrix.simd }}${{ matrix.extension }}

    - name: Upload Binary
      uses: actions/upload-artifact@v3
      with:
        name: StockDory-${{ matrix.version }}-${{ matrix.os }}-${{ matrix.simd }}
        path: ${{ github.workspace }}/StockDory-${{ matrix.version }}-${{ matrix.os }}-${{ matrix.simd }}${{ matrix.extension }}

